import java.io.*;
import java.util.*;
import java.util.stream.*;

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        // Read the 6x6 array
        IntStream.range(0, 6).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(Collectors.toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();

        // Calculate the maximum hourglass sum
        int maxHourglassSum = Integer.MIN_VALUE; // Initialize to the smallest integer value

        for (int i = 0; i < 4; i++) { // Loop through rows (0 to 3)
            for (int j = 0; j < 4; j++) { // Loop through columns (0 to 3)
                // Calculate the hourglass sum
                int hourglassSum = arr.get(i).get(j) + arr.get(i).get(j + 1) + arr.get(i).get(j + 2) // Top
                                  + arr.get(i + 1).get(j + 1) // Middle
                                  + arr.get(i + 2).get(j) + arr.get(i + 2).get(j + 1) + arr.get(i + 2).get(j + 2); // Bottom

                // Update the maximum hourglass sum
                maxHourglassSum = Math.max(maxHourglassSum, hourglassSum);
            }
        }

        // Print the maximum hourglass sum
        System.out.println(maxHourglassSum);
    }
}
